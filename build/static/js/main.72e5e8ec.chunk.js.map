{"version":3,"sources":["assets/img/ft.jpg","assets/img/hack.jpg","components/pages/not-found-page.js","components/pages/home-page.js","history.js","actions/auth.js","actions/types.js","actions/index.js","components/pages/contact-page.js","components/sales/pricing-table.js","components/sales/social-media-bar.js","components/sales/rotator-item.js","components/sales/rotator-nav.js","components/sales/rotator.js","components/pages/component-samples.js","components/template/header.js","components/pages/challenge.js","components/auth/register.js","components/auth/register_org.js","components/auth/login.js","components/auth/logout.js","components/auth/forgot_password.js","components/auth/reset_password.js","components/dashboard/dashboard.js","components/dashboard/profile/user-info.js","components/dashboard/profile/view-profile.js","actions/messaging.js","components/dashboard/messaging/conversation-item.js","components/dashboard/messaging/conversation-list.js","components/dashboard/messaging/inbox.js","components/dashboard/messaging/message-item.js","components/dashboard/messaging/message-list.js","components/dashboard/messaging/reply-message.js","components/dashboard/messaging/conversation.js","components/dashboard/messaging/compose-message.js","actions/billing.js","components/billing/checkout-form.js","components/billing/settings.js","components/billing/initial-checkout.js","components/admin/dashboard.js","components/auth/require_auth.js","routes.js","reducers/auth_reducer.js","reducers/user_reducer.js","reducers/communication_reducer.js","reducers/customer_reducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","NotFoundPage","Component","HomePage","className","Row","Col","src","ImgFt","alt","ImgHack","to","createBrowserHistory","loginUser","email","password","dispatch","axios","post","API_URL","then","response","cookie","save","data","token","path","user","type","history","push","catch","error","errorHandler","registerUser","name","conf_password","registerOrg","orgData","logoutUser","payload","remove","getForgotPasswordToken","resetPassword","message","protectedTest","get","headers","Authorization","load","content","process","console","log","errorMessage","status","postData","action","errorType","isAuthReq","url","requestUrl","getData","putData","put","ContactPage","firstName","lastName","emailAddress","subject","this","props","sendContactForm","handleSubmit","fields","onSubmit","handleFormSubmit","bind","renderMessage","renderAlert","reduxForm","form","state","communication","authenticated","auth","PricingTable","componentStyle","backgroundColor","color","fontColor","planName","style","price","features","map","index","key","toLowerCase","SocialMediaBar","socialNetworks","title","href","img","RotatorItem","selectedSlide","rotator","headline","text","author","RotatorNav","toMap","i","length","value","active","onClick","setPage","renderNav","Rotator","e","setState","target","rotators","filter","slider","bronzeFeatures","silverFeatures","goldFeatures","social","ComponentSamplesPage","HeaderTemplate","toggle","isOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Fragment","connect","backgroundImage","SignupForm","onFinish","values","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","Register","OrgSignupForm","file","logo","originFileObj","label","valuePropName","getValueFromEvent","Array","isArray","fileList","onChange","listType","UploadOutlined","md","sm","Option","RegisterOrg","LoginForm","initialValues","remember","noStyle","Login","Logout","actions","ForgotForm","ForgotPassword","nextProps","validate","formProps","errors","passwordConfirm","renderField","field","input","touched","ResetPassword","context","router","resetToken","params","Field","component","contextTypes","PropTypes","object","resetMessage","Dashboard","UserInfo","profile","ViewProfile","userId","fetchUser","uid","socket","io","fetchConversations","fetchConversation","conversation","startConversation","recipient","composedMessage","reset","fetchRecipients","sendReply","replyTo","emit","ConversationItem","conversationId","timestamp","moment","require","ConversationList","userCookie","_id","conversations","body","authorId","substring","createdAt","from","Inbox","renderInbox","currentUser","MessageItem","MessageList","displayMessages","autoComplete","ReplyMessage","recipients","Conversation","on","messages","ComposeMessage","renderRecipients","createCustomer","stripeToken","plan","lastFour","fetchCustomer","cancelSubscription","updateSubscription","newPlan","updateBilling","CreditForm","loadingSave","handeSubmit","a","preventDefault","onClickSave","cardNumberElement","elements","getElement","setupIntent","stripe","confirmCardSetup","payment_method","card","billing_details","cardName","address","city","country","postal_code","zip","line1","res","renderCreditCardBlock","id","onChangeInput","empty","cardNumber","cardExpiry","tabIndex","cardCode","renderBillingAddressBlock","countries","item","alpha2Code","pattern","validity","valid","renderSaveButtonBlock","display","injectStripe","BillingSettings","cancelConfirm","changeSubscription","customer","subscriptions","mostRecentSubscription","total_count","mostRecentSource","sources","subscribedPlan","last4","pmtAmt","amount","toFixed","pmtDate","unix","current_period_end","format","toString","cancel_at_period_end","renderAccountActions","toggleCancelConfirm","handlePlanChange","changePlanSubmit","toggleChangeSubscription","toggleUpdateBilling","renderPlan","InitialCheckout","AdminDashboard","ComposedComponent","Authentication","Routes","exact","RequireAuth","Challenge","INITIAL_STATE","rootReducer","combineReducers","formReducer","Boolean","window","location","hostname","match","ReactGA","initialize","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","onUpdate","pageview","pathname","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72e5e8ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ft.7ce2adc9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hack.16957b7c.jpg\";","import React, { Component } from 'react';\n\nclass NotFoundPage extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>404 - Page Not Found</h1>\n        <p>I'm sorry, the page you were looking for cannot be found!</p>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport ImgFt from \"../../assets/img/ft.jpg\"\nimport ImgHack from \"../../assets/img/hack.jpg\"\nimport { Row, Col } from \"reactstrap\"\nimport { Link } from 'react-router-dom';\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"home\" >\n      <div className=\"home-main\">\n        <h1 className=\"mb-5\">The COVID-19 Challenge</h1>\n        <h4 className=\"mb-5\">A collaboration of</h4>\n        <Row className=\"mb-4\">\n          <Col>\n            <img src={ImgFt} alt=\"FT\" />\n          </Col>\n          <Col>\n            <img src={ImgHack} alt=\"Hackathon\" />\n          </Col>\n        </Row>\n        <Link className=\"covid-btn covid-primary\" to=\"/register-org\">Register an Organization</Link>\n        <Link className=\"covid-btn covid-primary\" to=\"/register\">Register an Individual</Link>\n        <Link className=\"covid-btn covid-success\" to=\"/login\">Log In</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport cookie from 'react-cookies';\nimport { API_URL, CLIENT_ROOT_URL, errorHandler } from './index';\nimport { AUTH_USER, AUTH_ERROR, UNAUTH_USER, FORGOT_PASSWORD_REQUEST, RESET_PASSWORD_REQUEST, PROTECTED_TEST } from './types';\nimport history from \"../history\"\n\n//= ===============================\n// Authentication actions\n//= ===============================\n\n// TO-DO: Add expiration to cookie\nexport function loginUser({ email, password }) {\n  return function (dispatch) {\n    axios.post(`${API_URL}/auth/login`, { email, password })\n    .then((response) => {\n      cookie.save('token', response.data.token, { path: '/' });\n      cookie.save('user', response.data.user, { path: '/' });\n      dispatch({ type: AUTH_USER });\n      history.push(\"/dashboard\");\n    })\n    .catch((error) => {\n      errorHandler(dispatch, error.response, AUTH_ERROR);\n    });\n  };\n}\n\nexport function registerUser({ email, name, password, conf_password }) {\n  return function (dispatch) {\n    if (password !== conf_password) {\n      errorHandler(dispatch, \"password doesn't match\", AUTH_ERROR);\n      return\n    }\n    axios.post(`${API_URL}/auth/register`, { email, name, password })\n    .then((response) => {\n      cookie.save('token', response.data.token, { path: '/' });\n      cookie.save('user', response.data.user, { path: '/' });\n      dispatch({ type: AUTH_USER });\n      history.push(\"/dashboard\");\n    })\n    .catch((error) => {\n      errorHandler(dispatch, error.response, AUTH_ERROR);\n    });\n  };\n}\n\nexport function registerOrg(orgData) {\n  return function (dispatch) {\n    axios.post(`${API_URL}/auth/register-org`, orgData)\n    .then((response) => {\n      history.push(\"/challenge\");\n    })\n    .catch((error) => {\n      errorHandler(dispatch, error.response, AUTH_ERROR);\n    });\n  };\n}\n\nexport function logoutUser(error) {\n  return function (dispatch) {\n    dispatch({ type: UNAUTH_USER, payload: error || '' });\n    cookie.remove('token', { path: '/' });\n    cookie.remove('user', { path: '/' });\n\n    history.push(`/login`);\n  };\n}\n\nexport function getForgotPasswordToken({ email }) {\n  return function (dispatch) {\n    // axios.post(`${API_URL}/auth/forgot-password`, { email })\n    // .then((response) => {\n    //   dispatch({\n    //     type: FORGOT_PASSWORD_REQUEST,\n    //     payload: response.data.message,\n    //   });\n    // })\n    // .catch((error) => {\n    //   errorHandler(dispatch, error.response, AUTH_ERROR);\n    // });\n      errorHandler(dispatch, \"Not implemented yet\", AUTH_ERROR);\n  };\n}\n\nexport function resetPassword(token, { password }) {\n  return function (dispatch) {\n    axios.post(`${API_URL}/auth/reset-password/${token}`, { password })\n    .then((response) => {\n      dispatch({\n        type: RESET_PASSWORD_REQUEST,\n        payload: response.data.message,\n      });\n      // Redirect to login page on successful password reset\n      history.push('/login');\n    })\n    .catch((error) => {\n      errorHandler(dispatch, error.response, AUTH_ERROR);\n    });\n  };\n}\n\nexport function protectedTest() {\n  return function (dispatch) {\n    axios.get(`${API_URL}/protected`, {\n      headers: { Authorization: cookie.load('token') },\n    })\n    .then((response) => {\n      dispatch({\n        type: PROTECTED_TEST,\n        payload: response.data.content,\n      });\n    })\n    .catch((error) => {\n      errorHandler(dispatch, error.response, AUTH_ERROR);\n    });\n  };\n}\n","//= =====================\n// Auth Actions\n//= =====================\nexport const AUTH_USER = 'auth_user',\n  UNAUTH_USER = 'unauth_user',\n  AUTH_ERROR = 'auth_error',\n  FORGOT_PASSWORD_REQUEST = 'forgot_password_request',\n  RESET_PASSWORD_REQUEST = 'reset_password_request',\n  PROTECTED_TEST = 'protected_test';\n\n//= =====================\n// User Profile Actions\n//= =====================\nexport const FETCH_USER = 'fetch_user';\nexport const ERROR_RESPONSE = 'error_response';\n\n//= =====================\n// Messaging Actions\n//= =====================\nexport const FETCH_CONVERSATIONS = 'fetch_conversations',\n  FETCH_RECIPIENTS = 'fetch_recipients',\n  START_CONVERSATION = 'start_conversation',\n  FETCH_SINGLE_CONVERSATION = 'fetch_single_conversation',\n  CHAT_ERROR = 'chat_error',\n  SEND_REPLY = 'send_reply';\n\n//= =====================\n// Page Actions\n//= =====================\nexport const SEND_CONTACT_FORM = 'send_contact_form',\n  STATIC_ERROR = 'static_error';\n\n//= =====================\n// Customer Actions\n//= =====================\nexport const CREATE_CUSTOMER = 'create_customer',\n  FETCH_CUSTOMER = 'fetch_customer',\n  CANCEL_SUBSCRIPTION = 'cancel_subscription',\n  UPDATE_BILLING = 'update_billing',\n  BILLING_ERROR = 'billing_error',\n  CHANGE_SUBSCRIPTION = 'change_subscription';\n","import axios from 'axios';\nimport cookie from 'react-cookies';\nimport { logoutUser } from './auth';\nimport { STATIC_ERROR, FETCH_USER, SEND_CONTACT_FORM } from './types';\nexport const CLIENT_ROOT_URL = process.env.REACT_APP_API_HOST;\nexport const API_URL = process.env.REACT_APP_API_HOST\n//= ===============================\n// Utility actions\n//= ===============================\n\nexport function fetchUser(uid) {\n  return function (dispatch) {\n    axios.get(`${API_URL}/user/${uid}`, {\n      headers: { Authorization: cookie.load('token') },\n    })\n    .then((response) => {\n      dispatch({\n        type: FETCH_USER,\n        payload: response.data.user,\n      });\n    })\n    .catch(response => dispatch(errorHandler(response.data.error)));\n  };\n}\n\nexport function errorHandler(dispatch, error, type) {\n  console.log('Error type: ', type);\n  console.log(error);\n\n  if (!error) return\n  let errorMessage = error.status ? error.data.error : error;\n\n   // NOT AUTHENTICATED ERROR\n  if (error.status === 401 || (error.response && error.response.status === 401)) {\n    errorMessage = 'You are not authorized to do this.';\n    return dispatch(logoutUser(errorMessage));\n  }\n\n  dispatch({\n    type,\n    payload: errorMessage,\n  });\n}\n\n// Post Request\nexport function postData(action, errorType, isAuthReq, url, dispatch, data) {\n  const requestUrl = API_URL + url;\n  let headers = {};\n\n  if (isAuthReq) {\n    headers = { headers: { Authorization: cookie.load('token') } };\n  }\n\n  axios.post(requestUrl, data, headers)\n  .then((response) => {\n    dispatch({\n      type: action,\n      payload: response.data,\n    });\n  })\n  .catch((error) => {\n    errorHandler(dispatch, error.response, errorType);\n  });\n}\n\n// Get Request\nexport function getData(action, errorType, isAuthReq, url, dispatch) {\n  const requestUrl = API_URL + url;\n  let headers = {};\n\n  if (isAuthReq) {\n    headers = { headers: { Authorization: cookie.load('token') } };\n  }\n\n  axios.get(requestUrl, headers)\n  .then((response) => {\n    dispatch({\n      type: action,\n      payload: response.data,\n    });\n  })\n  .catch((error) => {\n    errorHandler(dispatch, error.response, errorType);\n  });\n}\n\n// Put Request\nexport function putData(action, errorType, isAuthReq, url, dispatch, data) {\n  const requestUrl = API_URL + url;\n  let headers = {};\n\n  if (isAuthReq) {\n    headers = { headers: { Authorization: cookie.load('token') } };\n  }\n\n  axios.put(requestUrl, data, headers)\n  .then((response) => {\n    dispatch({\n      type: action,\n      payload: response.data,\n    });\n  })\n  .catch((error) => {\n    errorHandler(dispatch, error.response, errorType);\n  });\n}\n\n// Delete Request\nexport function deleteData(action, errorType, isAuthReq, url, dispatch) {\n  const requestUrl = API_URL + url;\n  let headers = {};\n\n  if (isAuthReq) {\n    headers = { headers: { Authorization: cookie.load('token') } };\n  }\n\n  axios.delete(requestUrl, headers)\n  .then((response) => {\n    dispatch({\n      type: action,\n      payload: response.data,\n    });\n  })\n  .catch((error) => {\n    errorHandler(dispatch, error.response, errorType);\n  });\n}\n\n//= ===============================\n// Static Page actions\n//= ===============================\nexport function sendContactForm({ name, emailAddress, message }) {\n  return function (dispatch) {\n    axios.post(`${API_URL}/communication/contact`, { name, emailAddress, message })\n    .then((response) => {\n      dispatch({\n        type: SEND_CONTACT_FORM,\n        payload: response.data.message,\n      });\n    })\n    .catch((error) => {\n      errorHandler(dispatch, error.response, STATIC_ERROR);\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport { sendContactForm } from '../../actions/index';\n\nclass ContactPage extends Component {\n  handleFormSubmit({ firstName, lastName, emailAddress, subject, message }) {\n    this.props.sendContactForm({ firstName, lastName, emailAddress, subject, message });\n  }\n\n  renderAlert() {\n    if (this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n          <strong>Oops!</strong> {this.props.errorMessage}\n        </div>\n      );\n    }\n  }\n\n  renderMessage() {\n    if (this.props.message) {\n      return (\n        <div className=\"alert alert-success\">\n          <strong>Success!</strong> {this.props.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { handleSubmit, fields: { firstName, lastName, emailAddress, subject, message } } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n        {this.renderMessage()}\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <fieldset className=\"form-group\">\n              <label>First Name</label>\n              <input {...firstName} className=\"form-control\" />\n            </fieldset>\n          </div>\n\n          <div className=\"col-md-6\">\n            <fieldset className=\"form-group\">\n              <label>Last Name</label>\n              <input {...lastName} className=\"form-control\" />\n            </fieldset>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <fieldset className=\"form-group\">\n              <label>Email Address</label>\n              <input {...emailAddress} className=\"form-control\" />\n            </fieldset>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <fieldset className=\"form-group\">\n              <label>Subject</label>\n              <input {...subject} className=\"form-control\" />\n            </fieldset>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <fieldset className=\"form-group\">\n              <label>Message</label>\n              <textarea {...message} className=\"form-control\" />\n            </fieldset>\n          </div>\n        </div>\n        {this.renderAlert()}\n        <button action=\"submit\" className=\"btn btn-primary\">Send</button>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { errorMessage: state.communication.error,\n    message: state.communication.message,\n    authenticated: state.auth.authenticated };\n}\n\nexport default reduxForm({\n  form: 'contactForm',\n  fields: ['firstName', 'lastName', 'emailAddress', 'subject', 'message'],\n}, mapStateToProps, { sendContactForm })(ContactPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass PricingTable extends Component {\n  render() {\n    const componentStyle = {\n      backgroundColor: this.props.color || '#5BC0DE',\n      color: this.props.fontColor || '#FFF',\n    };\n\n    return (\n      <div className=\"pricing-table\">\n        <div className=\"col-md-4 col-sm-6 col-xs-12 float-shadow\">\n          <div className=\"price_table_container\">\n            <div className=\"price_table_heading\">{this.props.planName}</div>\n            <div className=\"price_table_body\">\n              <div className=\"price_table_row cost\" style={componentStyle}><strong>{this.props.price}</strong><span>/MONTH</span></div>\n              {this.props.features.map((data, index) => <div key={`${data}-${index}`} className=\"price_table_row\">\n                {data}\n              </div>)}\n            </div>\n            <Link to={`checkout/${(this.props.planName).toLowerCase()}`} className=\"btn btn-lg btn-block\" style={componentStyle}>Subscribe!</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PricingTable;\n","import React, { Component } from 'react';\n\nclass SocialMediaBar extends Component {\n  render() {\n    return (\n      <div className=\"social-bar\">\n        <ul>\n          {this.props.socialNetworks.map((data, index) => <li key={`${data}-${index}`} className=\"social-icon\">\n            <a title={data.name} href={data.href}><img alt={data.name} src={data.img} /></a>\n          </li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SocialMediaBar;\n","import React, { Component } from 'react';\n\nclass RotatorItem extends Component {\n  render() {\n    return (\n      <div className=\"slide\">\n        {this.props.selectedSlide.map((rotator, index) => (\n          <div className=\"rotator-item\" key={`${index}-${rotator.headline}`}>\n            <img className=\"rotator-image\" src={rotator.img} />\n            {rotator.headline ? `<h3>${rotator.headline}</h3>` : ''}\n            <div className=\"rotator-text-container\">\n              <p className=\"rotator-text\">{rotator.text}</p>\n              <p className=\"rotator-author\">{rotator.author}</p>\n            </div>\n          </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default RotatorItem;\n","import React, { Component } from 'react';\n\nclass RotatorNav extends Component {\n  renderNav() {\n    const toMap = [];\n\n    for (let i = 0; i < this.props.length; i++) {\n      toMap.push(\n        <li\n          key={`${i}nav`}\n          value={i}\n          className={i === this.props.active ? 'slider-nav-bullet active' : 'slider-nav-bullet'}\n          onClick={this.props.setPage}\n        />,\n      );\n    }\n    return toMap;\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.renderNav()}\n      </ul>\n    );\n  }\n}\n\nexport default RotatorNav;\n","import React, { Component } from 'react';\n\nimport RotatorItem from './rotator-item';\nimport RotatorNav from './rotator-nav';\n\nclass Rotator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setPage = this.setPage.bind(this);\n    this.state = {\n      index: 0,\n    };\n  }\n\n  setPage(e) {\n    this.setState({ index: e.target.value });\n  }\n\n  render() {\n    const selectedSlide = this.props.rotators.filter(function (slider, index) {\n      return index === this.state.index;\n    }, this);\n\n    return (\n      <div className=\"rotator-container\">\n        <RotatorItem selectedSlide={selectedSlide} />\n        <RotatorNav length={this.props.rotators.length} active={this.state.index} setPage={this.setPage} />\n      </div>\n    );\n  }\n}\n\nexport default Rotator;\n","import React, { Component } from 'react';\n\nimport PricingTable from '../sales/pricing-table';\nimport SocialMediaBar from '../sales/social-media-bar';\nimport Rotator from '../sales/rotator';\n\nconst bronzeFeatures = ['Really cool', 'Pretty cheap', 'Awesome'];\nconst silverFeatures = ['A couple features', 'Pretty neat'];\nconst goldFeatures = ['A bit cooler yet'];\nconst social = [\n  {\n    name: 'Facebook',\n    href: 'http://facebook.com/',\n    img: 'http://localhost:8080/src/public/img/icons/facebook.svg',\n  },\n  {\n    name: 'Twitter',\n    href: 'http://twitter.com/',\n    img: 'http://localhost:8080/src/public/img/icons/twitter.svg',\n  },\n];\n\nconst rotators = [\n  {\n    img: '',\n    headline: '',\n    text: 'I love React!',\n    author: 'JS',\n  },\n  {\n    img: '',\n    headline: '',\n    text: 'MERN stack is pretty cool.',\n    author: 'DM',\n  },\n];\n\nclass ComponentSamplesPage extends Component {\n  render() {\n    return (\n      <div className=\"select-plan\">\n        <div className=\"row\">\n          <PricingTable planName=\"Bronze\" color=\"#CCC\" price=\"$10\" features={bronzeFeatures} />\n          <PricingTable planName=\"Silver\" price=\"$15\" features={silverFeatures} />\n          <PricingTable planName=\"Gold\" price=\"$20\" features={goldFeatures} />\n        </div>\n\n        <SocialMediaBar socialNetworks={social} />\n\n        <Rotator rotators={rotators} />\n      </div>\n    );\n  }\n}\n\nexport default ComponentSamplesPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\n\nclass HeaderTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    const { authenticated } = this.props;\n    return (\n      <Navbar className=\"main-nav\" color=\"transparent\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Integra</NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            {authenticated && (\n              <NavItem>\n                <NavLink href=\"/dashboard\">Dashboard</NavLink>\n              </NavItem>\n            )}\n          </Nav>\n          <Nav navbar>\n            {authenticated && (\n              <NavItem>\n                <NavLink href=\"/logout\">Logout</NavLink>\n              </NavItem>\n            )}\n            {!authenticated && (\n              <React.Fragment>\n                <NavItem>\n                  <NavLink href=\"/login\">Login</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/register\">Register</NavLink>\n                </NavItem>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.auth.authenticated,\n  };\n}\n\nexport default connect(mapStateToProps)(HeaderTemplate);\n","import React, { Component } from 'react';\nimport Header from \"../template/header\";\n\nconst ImgBg = \"https://plast-asset.s3.amazonaws.com/earth-surrounded-by-coronavirus-microbes.jpg\"\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"dashboard\" style={{backgroundImage: `url(${ImgBg})`}}>\n          <div className=\"dashboard-title\">\n            <h2>Challenge Management</h2>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { registerUser } from \"../../actions/auth\";\nimport { Link } from \"react-router-dom\";\n\nconst SignupForm = ({ onSubmit, error }) => {\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    onSubmit(values);\n  };\n\n  return (\n    <Form\n      name=\"register\"\n      className=\"register-form\"\n      onFinish={onFinish}\n    >\n      <div className=\"auth-title mb-4\">\n        <h3>Register Participant</h3>\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n      <Form.Item\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your name!\"\n          }\n        ]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Name\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\"\n          }\n        ]}\n      >\n        <Input\n          type=\"email\"\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Email\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Password!\"\n          }\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"conf_password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please confirm your Password!\"\n          }\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n      </Form.Item>\n      {error && <p className=\"error\">{error}</p>}\n      <button\n        type=\"submit\"\n        className=\"covid-btn covid-success\"\n      >\n        Register\n      </button>\n      <br />\n      <Link className=\"mt-4\" to=\"/login\">\n        Already Have an Account\n      </Link>\n    </Form>\n  );\n};\n\nclass Register extends Component {\n  render() {\n    return (\n      <div className=\"auth\">\n        <SignupForm\n          onSubmit={this.props.registerUser}\n          error={this.props.errorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.error,\n    message: state.auth.message,\n    authenticated: state.auth.authenticated\n  };\n}\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Select, Upload, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { registerOrg } from \"../../actions/auth\";\nimport { Col, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst OrgSignupForm = ({ onSubmit, error }) => {\n  let file\n  const onFinish = values => {\n    values.logo = file ? file.originFileObj : null\n    console.log(\"Received values of form: \", values);\n    onSubmit(values);\n  };\n\n  const normFile = e => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  const handleUpload = e => {\n    file = e.file\n  }\n\n  return (\n    <Form name=\"org_register\" className=\"org-register-form\" onFinish={onFinish}>\n      <div className=\"auth-title mb-4\">\n        <h3>Register Organization</h3>\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n      <Form.Item\n        name=\"logo\"\n        label=\"Logo\"\n        valuePropName=\"fileList\"\n        getValueFromEvent={normFile}\n      >\n        <Upload onChange={handleUpload} listType=\"picture\">\n          <Button>\n            <UploadOutlined /> Click to upload\n          </Button>\n        </Upload>\n      </Form.Item>\n      <b>General Info</b>\n      <Row>\n        <Col md={6} sm={12}>\n          <Form.Item\n            name=\"org_name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input the organization name!\"\n              }\n            ]}\n          >\n            <Input placeholder=\"Name\" />\n          </Form.Item>\n          <Form.Item name=\"country\">\n            <Select placeholder=\"Country\">\n              <Select.Option value=\"united state\">United State</Select.Option>\n              <Select.Option value=\"russia\">Russia</Select.Option>\n              <Select.Option value=\"united kindom\">\n                United Kingdom\n              </Select.Option>\n              <Select.Option value=\"german\">German</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"website\">\n            <Input placeholder=\"Website\" />\n          </Form.Item>\n        </Col>\n        <Col md={6} sm={12}>\n          <Form.Item name=\"org_type\">\n            <Select placeholder=\"Type\">\n              <Select.Option value=\"type1\">Type1</Select.Option>\n              <Select.Option value=\"type2\">Type2</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name=\"address\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input the orgnaization address!\"\n              }\n            ]}\n          >\n            <Input placeholder=\"Address\" />\n          </Form.Item>\n          <Form.Item name=\"agree_terms\">\n            <Input placeholder=\"Agree Terms\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <b>Authourized Info</b>\n      <Row>\n        <Col md={6} sm={12}>\n          <Form.Item name=\"authorized_name\">\n            <Input placeholder=\"Authourized Name\" />\n          </Form.Item>\n          <Form.Item name=\"authorized_title\">\n            <Input placeholder=\"Authourized Title\" />\n          </Form.Item>\n        </Col>\n        <Col md={6} sm={12}>\n          <Form.Item name=\"authorized_email\">\n            <Input type=\"email\" placeholder=\"Authourized Email\" />\n          </Form.Item>\n          <Form.Item name=\"authorized_phone\">\n            <Input placeholder=\"Authourized Phone\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <b>Contact Info</b>\n      <Row>\n        <Col md={6} sm={12}>\n          <Form.Item name=\"contact_name\">\n            <Input placeholder=\"Contact Name\" />\n          </Form.Item>\n          <Form.Item name=\"contact_email\">\n            <Input type=\"email\" placeholder=\"Contact Email\" />\n          </Form.Item>\n        </Col>\n        <Col md={6} sm={12}>\n          <Form.Item name=\"contact_phone\">\n            <Input placeholder=\"Contact Phone\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      {error && <p className=\"error\">{error}</p>}\n      <button type=\"submit\" className=\"covid-btn covid-success\">\n        Register\n      </button>\n    </Form>\n  );\n};\n\nclass RegisterOrg extends Component {\n  render() {\n    return (\n      <div className=\"auth auth-wide\">\n        <OrgSignupForm\n          onSubmit={this.props.registerOrg}\n          error={this.props.errorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.error,\n    message: state.auth.message,\n    authenticated: state.auth.authenticated\n  };\n}\n\nexport default connect(mapStateToProps, { registerOrg })(RegisterOrg);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport { loginUser } from \"../../actions/auth\";\n\nconst LoginForm = ({ onSubmit, error }) => {\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    onSubmit(values);\n  };\n\n  return (\n    <Form\n      name=\"login\"\n      className=\"login-form\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n      <div className=\"auth-title mb-4\">\n        <h3>Log In</h3>\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\"\n          }\n        ]}\n      >\n        <Input\n          type=\"email\"\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Email\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Password!\"\n          }\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Link className=\"login-form-forgot text-right\" to=\"/forgot-password\">\n          Forgot password\n        </Link>\n      </Form.Item>\n      {error && <p className=\"error\">{error}</p>}\n      <button\n        type=\"submit\"\n        className=\"covid-btn covid-success\"\n      >\n        Log in\n      </button><br />\n      <Link className=\"mt-4\" to=\"/register\">\n        Create a New Account\n      </Link>\n    </Form>\n  );\n};\n\nclass Login extends Component {\n  render() {\n    return (\n      <div className=\"auth\">\n        <LoginForm\n          onSubmit={this.props.loginUser}\n          error={this.props.errorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.error\n  };\n}\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/auth';\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logoutUser();\n  }\n\n  render() {\n    return <div>Sorry to see you go!</div>;\n  }\n}\n\nexport default connect(null, actions)(Logout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { getForgotPasswordToken } from \"../../actions/auth\";\nimport history from \"../../history\";\nimport { Link } from \"react-router-dom\";\n\nconst ForgotForm = ({ onSubmit, error }) => {\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    onSubmit(values);\n  };\n\n  return (\n    <Form name=\"forgot\" className=\"forgot-form\" onFinish={onFinish}>\n      <div className=\"auth-title mb-4\">\n        <h3>Forgot Password</h3>\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\"\n          }\n        ]}\n      >\n        <Input\n          type=\"email\"\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Email\"\n        />\n      </Form.Item>\n      {error && <p className=\"error\">{error}</p>}\n      <button type=\"submit\" className=\"covid-btn covid-success\">\n        Reset Password\n      </button>\n    </Form>\n  );\n};\n\nclass ForgotPassword extends Component {\n  componentDidMount() {\n    if (this.props.authenticated) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.authenticated) {\n      history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"auth\">\n        <ForgotForm\n          onSubmit={this.props.getForgotPasswordToken}\n          error={this.props.errorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.error,\n    message: state.auth.message,\n    authenticated: state.auth.authenticated\n  };\n}\n\nexport default connect(mapStateToProps, { getForgotPasswordToken })(\n  ForgotPassword\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { resetPassword } from '../../actions/auth';\n\nconst form = reduxForm({\n  form: 'resetPassword',\n  validate,\n});\n\nfunction validate(formProps) {\n  const errors = {};\n\n  if (!formProps.password) {\n    errors.password = 'Please enter a new password';\n  }\n\n  if (!formProps.passwordConfirm) {\n    errors.passwordConfirm = 'Please confirm new password';\n  }\n\n  if (formProps.password !== formProps.passwordConfirm) {\n    errors.password = 'Passwords must match';\n  }\n\n  return errors;\n}\n\nconst renderField = field => (\n  <div>\n    <input className=\"form-control\" {...field.input} />\n    {field.touched && field.error && <div className=\"error\">{field.error}</div>}\n  </div>\n);\n\nclass ResetPassword extends Component {\n  static contextTypes = {\n    router: PropTypes.object,\n  }\n\n  componentDidMount() {\n    if (this.props.authenticated) {\n      this.context.router.push('/dashboard');\n    }\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.authenticated) {\n      this.context.router.push('/dashboard');\n    }\n  }\n\n  handleFormSubmit({ password }) {\n    const resetToken = this.props.params.resetToken;\n    this.props.resetPassword(resetToken, { password });\n  }\n\n  renderAlert() {\n    if (this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n          <strong>Oops!</strong> {this.props.errorMessage}\n        </div>\n      );\n    } else if (this.props.message) {\n      return (\n        <div className=\"alert alert-success\">\n          <strong>Success!</strong> {this.props.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n        <fieldset className=\"form-group\">\n          <label>New Password:</label>\n          <Field name=\"password\" component={renderField} type=\"password\" />\n        </fieldset>\n\n        <fieldset className=\"form-group\">\n          <label>Confirm New Password:</label>\n          <Field name=\"passwordConfirm\" component={renderField} type=\"password\" />\n          {/* {passwordConfirm.touched && passwordConfirm.error && <div className=\"error\">{passwordConfirm.error}</div>} */}\n        </fieldset>\n\n        {this.renderAlert()}\n        <button action=\"submit\" className=\"btn btn-primary\">Change Password</button>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { errorMessage: state.auth.error, message: state.auth.resetMessage };\n}\n\nexport default connect(mapStateToProps, { resetPassword })(form(ResetPassword));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { protectedTest } from '../../actions/auth';\nimport Header from \"../template/header\";\n\nconst ImgBg = \"https://plast-asset.s3.amazonaws.com/earth-surrounded-by-coronavirus-microbes.jpg\"\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.props.protectedTest();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"dashboard\" style={{backgroundImage: `url(${ImgBg})`}}>\n          <div className=\"dashboard-title\">\n            <h2>Welcome, you are logged in</h2>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { content: state.auth.content };\n}\n\nexport default connect(mapStateToProps, { protectedTest })(Dashboard);\n","import React, { Component } from 'react';\n\nclass UserInfo extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.profile}\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../../actions/index';\n\nimport UserInfo from './user-info';\n\nclass ViewProfile extends Component {\n  componentDidMount() {\n    // Fetch user data prior to component mounting\n    const userId = cookie.load('uid');\n    this.props.fetchUser(userId);\n  }\n\n  render() {\n    return (\n      <UserInfo profile={this.props.profile.email} />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.user.profile,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchUser })(ViewProfile);\n","import { reset } from 'redux-form';\nimport { getData, postData, putData, deleteData } from './index';\nimport io from 'socket.io-client';\nimport { CHAT_ERROR, FETCH_CONVERSATIONS, FETCH_RECIPIENTS, START_CONVERSATION, SEND_REPLY, FETCH_SINGLE_CONVERSATION } from './types';\n\n// Connect to socket.io server\nexport const socket = io.connect(process.env.REACT_APP_API_HOST);\n\n\n//= ===============================\n// Messaging actions\n//= ===============================\nexport function fetchConversations() {\n  const url = '/chat';\n  return dispatch => getData(FETCH_CONVERSATIONS, CHAT_ERROR, true, url, dispatch);\n}\n\nexport function fetchConversation(conversation) {\n  const url = `/chat/${conversation}`;\n  return dispatch => getData(FETCH_SINGLE_CONVERSATION, CHAT_ERROR, true, url, dispatch);\n}\n\nexport function startConversation({ recipient, composedMessage }) {\n  const data = { composedMessage };\n  const url = `/chat/new/${recipient}`;\n  return (dispatch) => {\n    postData(START_CONVERSATION, CHAT_ERROR, true, url, dispatch, data);\n\n    // Clear form after message is sent\n    dispatch(reset('composeMessage'));\n  };\n}\n\nexport function fetchRecipients() {\n  const url = '/chat/recipients';\n  return dispatch => getData(FETCH_RECIPIENTS, CHAT_ERROR, true, url, dispatch);\n}\n\nexport function sendReply(replyTo, { composedMessage }) {\n  const data = { composedMessage };\n  const url = `/chat/${replyTo}`;\n  return (dispatch) => {\n    postData(SEND_REPLY, CHAT_ERROR, true, url, dispatch, data);\n\n    // Clear form after message is sent\n    dispatch(reset('replyMessage'));\n    socket.emit('new message', replyTo);\n  };\n}\n","import React, { Component } from 'react';\n\nclass ConversationItem extends Component {\n  render() {\n    return (\n      <div className=\"message\">\n        <a href={`/dashboard/conversation/view/${this.props.conversationId}`}>\n          <span className=\"message-body\">{this.props.message}</span>\n          <br />\n          <span className=\"message-byline\">From {this.props.author} | {this.props.timestamp}</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default ConversationItem;\n","import React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport ConversationItem from './conversation-item';\nconst moment = require('moment');\n\nclass ConversationList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userCookie = cookie.load('user');\n  }\n\n  render() {\n    const currentUser = this.userCookie._id;\n\n    return (\n      <div className=\"messages\">\n        {this.props.conversations.map(data => data.map(message => (\n          <ConversationItem\n            key={message._id}\n            message={message.body}\n            authorId={message.author._id}\n            conversationId={message.conversationId}\n            author={`${message.author.profile.firstName} ${message.author.profile.lastName.substring(0, 1)}.`}\n            timestamp={moment(message.createdAt).from(moment())}\n          />\n            )))}\n      </div>\n    );\n  }\n}\n\nexport default ConversationList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchConversations } from '../../../actions/messaging';\n\nimport ConversationList from './conversation-list';\n\nclass Inbox extends Component {\n  componentDidMount() {\n    // Fetch inbox (conversations involving current user)\n    this.props.fetchConversations();\n  }\n\n  renderInbox() {\n    if (this.props.conversations && this.props.conversations.length > 0) {\n      return (\n        <ConversationList conversations={this.props.conversations} />\n      );\n    }\n\n    return <div>You do not have any active conversations.</div>;\n  }\n\n  render() {\n    return (\n      <div>\n        <Link className=\"btn btn-primary\" to=\"/dashboard/conversation/new\">Compose Message</Link>\n        <div className=\"panel panel-default\">\n          <div className=\"panel-body\">\n            {this.renderInbox()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conversations: state.communication.conversations,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchConversations })(Inbox);\n","import React, { Component } from 'react';\nimport cookie from 'react-cookies';\n\nconst currentUser = cookie.load('user');\n\nclass MessageItem extends Component {\n  render() {\n    return (\n      <div className={currentUser == this.props.author._id ? 'message current-user' : 'message'}>\n        <span className=\"message-body\">{this.props.message}</span>\n        <br />\n        <span className=\"message-byline\">From {this.props.author.profile.firstName} {this.props.author.profile.lastName} | {this.props.timestamp}</span>\n      </div>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React, { Component } from 'react';\nimport MessageItem from './message-item';\nconst moment = require('moment');\n\nclass MessageList extends Component {\n  render() {\n    return (\n      <div className=\"messages\">\n        {this.props.displayMessages.map(data => <MessageItem\n          key={data._id}\n          message={data.body}\n          author={data.author}\n          timestamp={moment(data.createdAt).from(moment())}\n        />)}\n      </div>\n    );\n  }\n}\n\nexport default MessageList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { sendReply } from '../../../actions/messaging';\n\nconst form = reduxForm({\n  form: 'replyMessage',\n});\n\nconst renderField = field => (\n  <div>\n    <input className=\"form-control\" autoComplete=\"off\" {...field.input} />\n  </div>\n);\n\nclass ReplyMessage extends Component {\n  handleFormSubmit(formProps) {\n    this.props.sendReply(this.props.replyTo, formProps);\n  }\n\n  renderAlert() {\n    if (this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n          <strong>Oops!</strong> {this.props.errorMessage}\n        </div>\n      );\n    } else if (this.props.message) {\n      return (\n        <div className=\"alert alert-success\">\n          <strong>Success!</strong> {this.props.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n        {this.renderAlert()}\n        <Field name=\"composedMessage\" className=\"form-control\" component={renderField} type=\"text\" placeholder=\"Type here to chat...\" />\n        <button action=\"submit\" className=\"btn btn-primary\">Send</button>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipients: state.communication.recipients,\n    errorMessage: state.communication.error,\n  };\n}\n\nexport default connect(mapStateToProps, { sendReply })(form(ReplyMessage));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions/messaging';\n\nimport MessageList from './message-list';\nimport ReplyMessage from './reply-message';\n\nconst socket = actions.socket;\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n\n    const { params, fetchConversation } = this.props;\n    // Fetch conversation thread (messages to/from user)\n    fetchConversation(params.conversationId);\n    socket.emit('enter conversation', params.conversationId);\n\n    // Listen for refresh messages from socket server\n    socket.on('refresh messages', (data) => {\n      fetchConversation(params.conversationId);\n    });\n  }\n\n  componentWillUnmount() {\n    socket.emit('leave conversation', this.props.params.conversationId);\n  }\n\n  renderInbox() {\n    if (this.props.messages) {\n      return (\n        <MessageList displayMessages={this.props.messages} />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"panel panel-default\">\n          <div className=\"panel-body\">\n            <h4 className=\"left\">Conversation with {this.props.params.conversationId}</h4>\n            <Link className=\"right\" to=\"/dashboard/inbox\">Back to Inbox</Link>\n            <div className=\"clearfix\" />\n            { this.renderInbox() }\n          </div>\n        </div>\n        <ReplyMessage replyTo={this.props.params.conversationId} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    messages: state.communication.messages,\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Conversation);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { fetchRecipients, startConversation } from '../../../actions/messaging';\n\nconst form = reduxForm({\n  form: 'composeMessage',\n  validate,\n});\n\nfunction validate(formProps) {\n  const errors = {};\n\n  if (!formProps.composedMessage) {\n    errors.password = 'Please enter a message';\n  }\n\n  return errors;\n}\n\nconst renderField = field => (\n  <div>\n    <input className=\"form-control\" autoComplete=\"off\" {...field.input} />\n    {field.touched && field.error && <div className=\"error\">{field.error}</div>}\n  </div>\n);\n\nclass ComposeMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.fetchRecipients();\n  }\n\n  handleFormSubmit(formProps) {\n    this.props.startConversation(formProps);\n  }\n\n  renderRecipients() {\n    if (this.props.recipients) {\n      return (\n        this.props.recipients.map(data => <option key={data._id} value={data._id}>\n          {data.profile.firstName} {data.profile.lastName}</option>)\n      );\n    }\n  }\n\n  renderAlert() {\n    if (this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n          <strong>Oops!</strong> {this.props.errorMessage}\n        </div>\n      );\n    } else if (this.props.message) {\n      return (\n        <div className=\"alert alert-success\">\n          <strong>Success!</strong> {this.props.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n        <h2>Start New Conversation</h2>\n        <Field className=\"form-control\" name=\"recipient\" component=\"select\">\n          <option />\n          {this.renderRecipients()}\n        </Field>\n\n        <label>Enter your message below</label>\n        {this.renderAlert()}\n        <Field name=\"composedMessage\" component={renderField} type=\"text\" placeholder=\"Type here to chat...\" />\n        <button action=\"submit\" className=\"btn btn-primary\">Send</button>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipients: state.communication.recipients,\n    errorMessage: state.communication.error,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchRecipients, startConversation })(form(ComposeMessage));\n","import { getData, postData, putData, deleteData } from './index';\nimport { BILLING_ERROR, CREATE_CUSTOMER, FETCH_CUSTOMER, CANCEL_SUBSCRIPTION, CHANGE_SUBSCRIPTION, UPDATE_BILLING } from './types';\n\n//= ===============================\n// Customer actions\n//= ===============================\nexport function createCustomer(stripeToken, plan, lastFour) {\n  const data = { stripeToken, plan, lastFour };\n  const url = '/pay/customer';\n  return dispatch => postData(CREATE_CUSTOMER, BILLING_ERROR, true, url, dispatch, data);\n}\n\nexport function fetchCustomer() {\n  const url = '/pay/customer';\n  return dispatch => getData(FETCH_CUSTOMER, BILLING_ERROR, true, url, dispatch);\n}\n\nexport function cancelSubscription() {\n  const url = '/pay/customer';\n  return dispatch => getData(CANCEL_SUBSCRIPTION, BILLING_ERROR, true, url, dispatch);\n}\n\nexport function updateSubscription(newPlan) {\n  const data = { newPlan };\n  const url = '/pay/subscription';\n  return dispatch => putData(CHANGE_SUBSCRIPTION, BILLING_ERROR, true, url, dispatch, data);\n}\n\nexport function updateBilling(stripeToken) {\n  const data = { stripeToken };\n  const url = '/pay/customer';\n  return dispatch => putData(UPDATE_BILLING, BILLING_ERROR, true, url, dispatch, data);\n}\n","import React, { Component } from \"react\";\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  injectStripe\n} from \"react-stripe-elements\";\n\nclass CreditForm extends Component {\n  state = {\n    loadingSave: false\n  };\n\n  handeSubmit = async e => {\n    e.preventDefault();\n    if (this.state.loadingSave) return;\n    if (this.props.onClickSave()) {\n      this.setState({ loadingSave: true });\n      const cardNumberElement = this.props.elements.getElement(\"cardNumber\");\n      try {\n        const setupIntent = await this.props.setupIntent();\n\n        this.props.stripe\n          .confirmCardSetup(setupIntent, {\n            payment_method: {\n              card: cardNumberElement,\n              billing_details: {\n                name: this.props.data.cardName,\n                address: {\n                  city: this.props.data.city,\n                  country: this.props.data.country,\n                  state: this.props.data.state,\n                  postal_code: this.props.data.zip,\n                  line1: this.props.data.address\n                }\n              }\n            }\n          })\n          .then(res => {\n            if (res.error) {\n              this.setState({ loadingSave: false });\n            } else {\n              this.props.onClickSave(res);\n              this.setState({ loadingSave: false });\n            }\n          });\n      } catch (e) {\n        console.log(e);\n        this.setState({ loadingSave: false });\n      }\n    }\n    return;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"credit-form\"\n        style={this.props.display ? { display: \"block\" } : { display: \"none\" }}\n        onSubmit={this.handeSubmit}\n      >\n        {this.renderCreditCardBlock()}\n        {this.renderBillingAddressBlock()}\n        {this.renderSaveButtonBlock()}\n      </form>\n    );\n  }\n\n  renderCreditCardBlock = () => (\n    <React.Fragment>\n      <h3 className=\"credit-form-title\">Card Info</h3>\n      <div className=\"row card-row\">\n        <div className=\"col-sm-12 col-md-6 p-2\">\n          <div className=\"card-blc front\">\n            <div id=\"card-element\" className=\"form-group card-number\">\n              <label>\n                <span>Card Number</span>\n              </label>\n              <div className=\"input-item\">\n                <CardNumberElement\n                  onChange={e =>\n                    this.props.onChangeInput(\"cardNumber\", e.empty)\n                  }\n                />\n                <div className=\"help-block\">\n                  {this.props.data.errors.cardNumber}\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group card-expiration\">\n              <label>\n                <span>Expiration Date</span>\n              </label>\n              <div className=\"input-item\">\n                <CardExpiryElement\n                  onChange={e =>\n                    this.props.onChangeInput(\"cardExpiry\", e.empty)\n                  }\n                />\n                <div className=\"help-block\">\n                  {this.props.data.errors.cardExpiry}\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group card-name\">\n              <label>\n                <span>Cardholder Name</span>\n              </label>\n              <div className=\"input-item\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Cardholder Name\"\n                  tabIndex=\"0\"\n                  name=\"name\"\n                  onChange={e =>\n                    this.props.onChangeInput(\"cardName\", e.target.value)\n                  }\n                />\n                <div className=\"help-block\">\n                  {this.props.data.errors.cardName}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6 p-2\">\n          <div className=\"card-blc back\">\n            <div className=\"form-group\">\n              <div className=\"back-inner\">\n                <label>\n                  <span>CVC code</span>\n                </label>\n                <CardCvcElement\n                  onChange={e => this.props.onChangeInput(\"cardCode\", e.empty)}\n                />\n                <div className=\"help-block\">\n                  {this.props.data.errors.cardCode}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n\n  renderBillingAddressBlock = () => (\n    <div className=\"area\">\n      <h3 className=\"credit-form-title\">Billing Address</h3>\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-6 p-2 \">\n          <div className=\"form-group\">\n            <label>\n              <span>Name</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Person or company name\"\n              tabIndex=\"0\"\n              onChange={e => this.props.onChangeInput(\"name\", e.target.value)}\n            />\n            <div className=\"help-block\">{this.props.data.errors.name}</div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6 p-2 \">\n          <div className=\"form-group\">\n            <label>\n              <span>Country</span>\n            </label>\n            <div className=\"select-wrap\">\n              <select\n                onChange={e =>\n                  this.props.onChangeInput(\"country\", e.target.value)\n                }\n              >\n                <option>Select Country</option>\n                {this.props.countries && this.props.countries.length > 0\n                  ? this.props.countries.map((item, index) => (\n                      <option key={index} value={item.alpha2Code}>\n                        {item.name}\n                      </option>\n                    ))\n                  : null}\n              </select>\n            </div>\n            <div className=\"help-block\">{this.props.data.errors.country}</div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6 p-2 \">\n          <div className=\"form-group\">\n            <label>\n              <span>Street Address</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Street\"\n              tabIndex=\"0\"\n              onChange={e =>\n                this.props.onChangeInput(\"address\", e.target.value)\n              }\n            />\n            <div className=\"help-block\">{this.props.data.errors.address}</div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6 p-2 \">\n          <div className=\"form-group\">\n            <label>\n              <span>City</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"City\"\n              tabIndex=\"0\"\n              onChange={e => this.props.onChangeInput(\"city\", e.target.value)}\n            />\n            <div className=\"help-block\">{this.props.data.errors.city}</div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6 p-2 \">\n          <div className=\"form-group\">\n            <label>\n              <span>State</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Region\"\n              tabIndex=\"0\"\n              onChange={e => this.props.onChangeInput(\"state\", e.target.value)}\n            />\n            <div className=\"help-block\">{this.props.data.errors.state}</div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6 p-2 \">\n          <div className=\"form-group\">\n            <label>\n              <span>Zip</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"10001\"\n              tabIndex=\"0\"\n              pattern=\"[0-9]*\"\n              value={this.props.data.zip ? this.props.data.zip : \"\"}\n              onChange={e => {\n                if (e.target.validity.valid)\n                  this.props.onChangeInput(\"zip\", e.target.value);\n              }}\n            />\n            <div className=\"help-block\">{this.props.data.errors.zip}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  renderSaveButtonBlock = () => (\n    <div className=\"action-blc\">\n      <button className=\"button button-primary credit\">\n        {this.state.loadingSave && \"loading...\"}\n        {!this.state.loadingSave && \"Save my card\"}\n      </button>\n    </div>\n  );\n}\n\nexport default injectStripe(CreditForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/billing';\nimport CheckoutForm from './checkout-form';\nconst moment = require('moment');\n\nclass BillingSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.fetchCustomer();\n\n    this.state = {\n      cancelConfirm: false,\n      changeSubscription: false,\n      updateBilling: false,\n      newPlan: '',\n    };\n  }\n\n  handlePlanChange(e) {\n    this.setState({ newPlan: e.target.value });\n  }\n\n  changePlanSubmit() {\n    this.props.updateSubscription(this.state.newPlan);\n  }\n\n  renderAlert() {\n    if (this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n          <strong>Oops!</strong> {this.props.errorMessage}\n        </div>\n      );\n    } else if (this.props.message) {\n      return (\n        <div className=\"alert alert-success\">\n          <strong>Success!</strong> {this.props.message}\n        </div>\n      );\n    }\n  }\n\n  renderPlan() {\n    if (this.props.customer.subscriptions) {\n      const mostRecentSubscription = this.props.customer.subscriptions.total_count - 1;\n      const mostRecentSource = this.props.customer.sources.total_count - 1;\n      const subscribedPlan = this.props.customer.subscriptions.data[mostRecentSubscription].plan.id;\n      const lastFour = this.props.customer.sources.data[mostRecentSource].last4;\n      const pmtAmt = ((this.props.customer.subscriptions.data[mostRecentSubscription].plan.amount) / 100).toFixed(2);\n      const pmtDate = moment.unix(this.props.customer.subscriptions.data[mostRecentSubscription].current_period_end).format('dddd, MMMM Do YYYY').toString();\n\n      if (this.props.customer.subscriptions.data[mostRecentSubscription].cancel_at_period_end) {\n        return (\n          <div className=\"active-subscription\">\n              Your {subscribedPlan} plan will expire on {pmtDate}. You will not be charged again.\n            </div>\n        );\n      } else {\n        return (\n          <div className=\"active-subscription\">\n              You are subscribed to the {subscribedPlan} plan.\n              Your credit card ending in {lastFour} will be charged ${pmtAmt} on {pmtDate}.\n\n              {this.renderAccountActions()}\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"loading\">\n        Loading...\n      </div>\n    );\n  }\n\n  renderAccountActions() {\n    if (this.state.cancelConfirm) {\n      // TODO: Event handler for yes to dispatch action to cancel sub + redirect to \"sorry to see you go\" page\n      return (\n        <div className=\"cancel-confirm\">\n          <p>Do you really want to cancel your membership to ImproveFit?</p>\n          <div className=\"action-buttons\">\n            <button className=\"btn btn-danger\" onClick={this.props.cancelSubscription.bind(this)}>Yes</button>\n            <button className=\"btn btn-primary\" onClick={this.toggleCancelConfirm.bind(this)}>No</button>\n          </div>\n        </div>\n      );\n    } else if (this.state.changeSubscription) {\n      return (\n        <div className=\"action-buttons\">\n          <select className=\"form-control\" name=\"newPlan\" value={this.state.newPlan} onChange={this.handlePlanChange.bind(this)}>\n            <option value=\"bronze\">Bronze</option>\n            <option value=\"silver\">Silver</option>\n            <option value=\"gold\">Gold</option>\n          </select>\n          <button className=\"btn btn-primary\" onClick={this.changePlanSubmit.bind(this)}>Change</button>\n          <button className=\"btn btn-primary\" onClick={this.toggleChangeSubscription.bind(this)}>Cancel</button>\n        </div>\n      );\n    } else if (this.state.updateBilling) {\n      return (\n        <div className=\"action-buttons\">\n          <CheckoutForm /><button className=\"btn btn-danger\" onClick={this.toggleUpdateBilling.bind(this)}>Cancel</button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"action-buttons\">\n          <button className=\"btn btn-primary\" onClick={this.toggleChangeSubscription.bind(this)}>Change Subscription</button>\n          <button className=\"btn btn-info\" onClick={this.toggleUpdateBilling.bind(this)}>Update Billing Information</button>\n          <button className=\"btn btn-danger\" onClick={this.toggleCancelConfirm.bind(this)}>Cancel Subscription</button>\n        </div>\n      );\n    }\n  }\n\n  toggleChangeSubscription(e) {\n    e.preventDefault();\n\n    if (this.state.changeSubscription) {\n      this.setState({ changeSubscription: false });\n    } else {\n      this.setState({ changeSubscription: true });\n    }\n  }\n\n  toggleCancelConfirm(e) {\n    e.preventDefault();\n\n    if (this.state.cancelConfirm) {\n      this.setState({ cancelConfirm: false });\n    } else {\n      this.setState({ cancelConfirm: true });\n    }\n  }\n\n  toggleUpdateBilling(e) {\n    e.preventDefault();\n\n    if (this.state.updateBilling) {\n      this.setState({ updateBilling: false });\n    } else {\n      this.setState({ updateBilling: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"user-subscription\">\n        {this.renderAlert()}\n        {this.renderPlan()}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customer: state.customer.customer,\n  };\n}\n\nexport default connect(mapStateToProps, actions)(BillingSettings);\n","import React, { Component } from 'react';\n\nimport CheckoutForm from './checkout-form';\n\nclass InitialCheckout extends Component {\n  render() {\n    return (\n      <CheckoutForm plan={this.props.params.plan} />\n    );\n  }\n}\n\nexport default InitialCheckout;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AdminDashboard extends Component {\n  render() {\n    return (\n      <div>\n        Admin navigation goes here.\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport history from \"../../history\"\n\nexport default function (ComposedComponent) {\n  class Authentication extends Component {\n    componentDidMount() {\n      if (!this.props.authenticated) {\n        history.push('/login');\n      }\n    }\n\n    componentDidUpdate(nextProps) {\n      if (!nextProps.authenticated) {\n        history.push('/login');\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { authenticated: state.auth.authenticated };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// Import miscellaneous routes and other requirements\nimport NotFoundPage from \"./components/pages/not-found-page\";\n\n// Import static pages\nimport HomePage from \"./components/pages/home-page\";\nimport ContactPage from \"./components/pages/contact-page\";\nimport ComponentSamplesPage from \"./components/pages/component-samples\";\nimport Challenge from \"./components/pages/challenge\"\n\n// Import authentication related pages\nimport Register from \"./components/auth/register\";\nimport RegisterOrg from \"./components/auth/register_org\";\nimport Login from \"./components/auth/login\";\nimport Logout from \"./components/auth/logout\";\nimport ForgotPassword from \"./components/auth/forgot_password\";\nimport ResetPassword from \"./components/auth/reset_password\";\n\n// Import dashboard pages\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport ViewProfile from \"./components/dashboard/profile/view-profile\";\nimport Inbox from \"./components/dashboard/messaging/inbox\";\nimport Conversation from \"./components/dashboard/messaging/conversation\";\nimport ComposeMessage from \"./components/dashboard/messaging/compose-message\";\nimport BillingSettings from \"./components/billing/settings\";\n\n// Import billing pages\nimport InitialCheckout from \"./components/billing/initial-checkout\";\n\n// Import admin pages\nimport AdminDashboard from \"./components/admin/dashboard\";\n\n// Import higher order components\nimport RequireAuth from \"./components/auth/require_auth\";\n\nconst Routes = () => (\n  <div className=\"layout\">\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"contact-us\" component={ContactPage} />\n      <Route\n        path=\"component-samples\"\n        component={RequireAuth(ComponentSamplesPage)}\n      />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/register-org\" component={RegisterOrg} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/logout\" component={Logout} />\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\n      <Route path=\"/reset-password/:resetToken\" component={ResetPassword} />\n      <Route path=\"/challenge\" component={Challenge} />\n\n      <Route path=\"/checkout/:plan\" component={RequireAuth(InitialCheckout)} />\n      <Route path=\"/billing/settings\" component={RequireAuth(BillingSettings)} />\n      <Route path=\"/profile\" component={RequireAuth(ViewProfile)} />\n\n      <Route path=\"/admin\" component={RequireAuth(AdminDashboard)} />\n      <Route exact path=\"/dashboard\" component={RequireAuth(Dashboard)} />\n      <Route path=\"/dashboard/inbox\" component={RequireAuth(Inbox)} />\n      <Route\n        path=\"/dashboard/conversation/new\"\n        component={RequireAuth(ComposeMessage)}\n      />\n      <Route\n        path=\"/dashboard/conversation/view/:conversationId\"\n        component={RequireAuth(Conversation)}\n      />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  </div>\n);\n\nexport default Routes","import { AUTH_USER, UNAUTH_USER, AUTH_ERROR, FORGOT_PASSWORD_REQUEST, RESET_PASSWORD_REQUEST, PROTECTED_TEST } from '../actions/types';\n\nconst INITIAL_STATE = { error: '', message: '', content: '', authenticated: false };\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return { ...state, error: '', message: '', authenticated: true };\n    case UNAUTH_USER:\n      return { ...state, authenticated: false, error: action.payload };\n    case AUTH_ERROR:\n      return { ...state, error: action.payload };\n    case FORGOT_PASSWORD_REQUEST:\n      return { ...state, message: action.payload.message };\n    case RESET_PASSWORD_REQUEST:\n      return { ...state, message: action.payload.message };\n    case PROTECTED_TEST:\n      return { ...state, content: action.payload.message };\n  }\n\n  return state;\n}\n","import { FETCH_USER, ERROR_RESPONSE } from '../actions/types';\n\nconst INITIAL_STATE = { profile: {}, message: '', error: '' };\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return { ...state, profile: action.payload.user };\n    case ERROR_RESPONSE:\n      return { ...state, error: action.payload };\n  }\n\n  return state;\n}\n","import { FETCH_CONVERSATIONS, SEND_CONTACT_FORM, SEND_REPLY, START_CONVERSATION, FETCH_SINGLE_CONVERSATION, FETCH_RECIPIENTS, CHAT_ERROR } from '../actions/types';\n\nconst INITIAL_STATE = { conversations: [], message: '', messages: [], recipients: [], error: '' };\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_CONVERSATIONS:\n      return { ...state, conversations: action.payload.conversations };\n    case FETCH_SINGLE_CONVERSATION:\n      return { ...state, messages: action.payload.conversation };\n    case FETCH_RECIPIENTS:\n      return { ...state, recipients: action.payload.recipients };\n    case START_CONVERSATION:\n      return { ...state, message: action.payload.message };\n    case SEND_REPLY:\n      return { ...state, message: action.payload.message };\n    case SEND_CONTACT_FORM:\n      return { ...state, message: action.payload.message };\n    case CHAT_ERROR:\n      return { ...state, error: action.payload };\n  }\n\n  return state;\n}\n","import { CREATE_CUSTOMER, BILLING_ERROR, FETCH_CUSTOMER, CANCEL_SUBSCRIPTION, CHANGE_SUBSCRIPTION, UPDATE_BILLING } from '../actions/types';\n\nconst INITIAL_STATE = { message: '', error: '', customer: {} };\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CREATE_CUSTOMER:\n      return { ...state, message: action.payload.message };\n    case FETCH_CUSTOMER:\n      return { ...state, customer: action.payload.customer };\n    case CANCEL_SUBSCRIPTION:\n      return { ...state, message: action.payload.message };\n    case CHANGE_SUBSCRIPTION:\n      return { ...state, message: action.payload.message };\n    case UPDATE_BILLING:\n      return { ...state, message: action.payload.message };\n    case BILLING_ERROR:\n      return { ...state, error: action.payload };\n  }\n\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './auth_reducer';\nimport userReducer from './user_reducer';\nimport communicationReducer from './communication_reducer';\nimport customerReducer from './customer_reducer';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  auth: authReducer,\n  user: userReducer,\n  communication: communicationReducer,\n  customer: customerReducer,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Router } from \"react-router-dom\";\nimport reduxThunk from \"redux-thunk\";\nimport cookie from \"react-cookies\";\nimport Routes from \"./routes\";\nimport reducers from \"./reducers/index\";\nimport ReactGA from \"react-ga\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AUTH_USER } from \"./actions/types\";\nimport history from \"./history\";\n// import stylesheets\nimport \"./index.scss\";\nimport \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Initialize Google Analytics\nReactGA.initialize(\"UA-000000-01\");\n\nfunction logPageView() {\n  ReactGA.pageview(window.location.pathname);\n}\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\nconst store = createStoreWithMiddleware(reducers);\n\nconst token = cookie.load(\"token\");\n\nif (token) {\n  // Update application state. User has token and is probably authenticated\n  store.dispatch({ type: AUTH_USER });\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history} onUpdate={logPageView}>\n      <Routes />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}